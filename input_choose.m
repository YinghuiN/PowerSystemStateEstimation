%---------------------------------------------------------------------------%
                  % 子程序 “input_choose.m”作用为输入界面制作             
                  % 入口参数：无
                  % 返回参数：节点参数矩阵bus，支路参数矩阵branch，
                  %           量测参数矩阵mdata，状态量真值矩阵pfresult,
                  %           画图显示标志位draw_flag，算法选择标志位alg_flag
%---------------------------------------------------------------------------%
function [bus,branch,mdata,pfresult,draw_flag,alg_flag]=input_choose()  
     fprintf('---------------------------------------------------<*输入界面*>---------------------------------------------------\n');
     fprintf('【ATTENTION】\n');
     fprintf('  <1> 数字表示含义:\n');
     fprintf('      --[01]―cr14_1；[02]―cr57_1；[03]―cr118_1；[04]―cr736_1；[05]―cr2383wp_1；[06]―eg4bus\n');
     fprintf('      --[07]―cr14_2；[08]―cr57_2；[09]―cr118_2\n');
     fprintf('      --[10]―cr14_3；[11]―cr57_3；[12]―cr118_3\n');
     fprintf('      --[13]―cr14_4；[14]―cr57_4；[15]―cr118_4\n');
     fprintf('  <2> 数据说明：\n');
     fprintf('      --后缀“_1”表示冗余度很高（3.5-4.5），量测噪声标准差为0.001；\n');
     fprintf('      --后缀“_2”表示冗余度较低（2.0-2.5），量测噪声标准差为0.001；\n');
     fprintf('      --后缀“_3”表示冗余度较低（2.5-3.0），量测噪声标准差为0.001；\n');
     fprintf('      --后缀“_4”表示冗余度较低（2.5-3.0），量测噪声标准差为0.020。\n');
     fprintf('     （“_1”与“_2”可做冗余度测试；“_3”与“_4”可做标准差测试） \n');
     fprintf('【INPUT】\n');
     A = input('  - 请输入需要进行状态估计的算例（1-15）：');
     draw_flag = input('  - 请确认是否画图比较结果（0-否；1-是）：');
     alg_flag  = input('  - 请选择状态估计算法（0-WLSM；1-FDM）：');
     fprintf('---------------------------------------------------<*输出界面*>---------------------------------------------------\n');
     switch (A)
         case 1
             eval('cr14_1');
         case 2
             eval('cr57_1');
         case 3
             eval('cr118_1');
         case 4
             eval('cr736_1');
         case 5
             eval('cr2383wp_1');
         case 6
             eval('eg4bus');
         case 7
             eval('cr14_2');
         case 8
             eval('cr57_2');
         case 9
             eval('cr118_2');
         case 10
             eval('cr14_3');
         case 11
             eval('cr57_3');
         case 12
             eval('cr118_3');
         case 13
             eval('cr14_4');
         case 14
             eval('cr57_4');
         case 15
             eval('cr118_4');
     end
end